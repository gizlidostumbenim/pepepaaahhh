
-- Variables
local Players = game:GetService("Players")

local lp = Players.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()
local hrp = char.HumanoidRootPart

local current_plot
local nextlvl
local unitcost
local yen

local choosed_ally
local choosed_howmuch = 1
local choosed_howmuch2 = 1
local choosed_cd
local choosed_chest

-- Tables
local Allies = {[1] = "Narudo",[2] = "Sosuke",[3] = "Minaro",[4] = "Kakashy",[5] = "Ruffy",[6] = "Zaro",[7] = "Sangi",[8] = "Shonks",[9] = "Roku",[10] = "Vegeto",[11] = "Picolo",[12] = "Beeros",[13] = "Tanjiro",[14] = "Nozuko",[15] = "Zenitso",[16] = "Rengoko",[17] = "Reku",[18] = "Todoroko",[19] = "No Gravity",[20] = "Bakago",[21] = "Gan",[22] = "Kirua",[23] = "Gonos",[24] = "John"}
local suffixes = {"K", "M", "B", "T", "Q"}
local Chests = {}
for i,v in pairs(game:GetService("ReplicatedStorage")["_GAME"]["_DATA"].Chests.Chests:GetChildren()) do
    table.insert(Chests, tostring(v.Name))
end

-- Functions
local function GetCurrentPlot()
    for i,v in pairs(game:GetService("Workspace").Game.PlayerIslands:GetChildren()) do
        if v:IsA("Folder") and v.Name == lp.Name then
            return v
        end
    end
end
current_plot = GetCurrentPlot()

local function IndexUnit(ally)
    for index, unit in Allies do
        if ally == unit then
            return index
        end
    end
end

local function Convert(s)
	local n, suffix = string.match(s, "(.*)(%a)$")
	if n and suffix then
		local i = table.find(suffixes, suffix) or 0
		return tonumber(n) * math.pow(10, i * 3)
	end
	return tonumber(s)
end

local function Swing()
    -- Remote
    local args = {[1] = "Swing"}
    game:GetService("ReplicatedStorage"):WaitForChild("_GAME"):WaitForChild("_MODULES"):WaitForChild("Utilities"):WaitForChild("NetworkUtility"):WaitForChild("Functions"):WaitForChild("Weapon"):InvokeServer(unpack(args)) 
end

local function NextLevel()
    if current_plot.Buttons:FindFirstChild("NextLevel")["Meshes/Circle"].Transparency ~= 1 then
        nextlvl = true
		local partlevel = current_plot.Buttons.NextLevel["Meshes/Circle"]
        hrp.CFrame = partlevel.CFrame + Vector3.new(-4, 1, 0)
		char:FindFirstChildOfClass("Humanoid"):MoveTo(partlevel.Position)
    else
        nextlvl = false
    end
end

local function Hire()
    unitcost = lp.PlayerGui.Hire.Holder.MainFrame.Unit1.YenAmount.Text
    yen = lp.PlayerData.Stats.Yen.Value
    
    if tonumber(yen) >= Convert(unitcost) then
        -- Remote
        local args = {[1] = "Hire"}
	    game:GetService("ReplicatedStorage"):WaitForChild("_GAME"):WaitForChild("_MODULES"):WaitForChild("Utilities"):WaitForChild("NetworkUtility"):WaitForChild("Events"):WaitForChild("Allies"):FireServer(unpack(args))
    end
end

local function UpgradeAll()
    for index in Allies do
        local args = {[1] = "Upgrade",[2] = index,[3] = choosed_howmuch2}
        game:GetService("ReplicatedStorage"):WaitForChild("_GAME"):WaitForChild("_MODULES"):WaitForChild("Utilities"):WaitForChild("NetworkUtility"):WaitForChild("Events"):WaitForChild("Allies"):FireServer(unpack(args))
    end
end

local function Upgrade(id, amount)
	local args = {[1] = "Upgrade",[2] = id,[3] = amount}
	game:GetService("ReplicatedStorage"):WaitForChild("_GAME"):WaitForChild("_MODULES"):WaitForChild("Utilities"):WaitForChild("NetworkUtility"):WaitForChild("Events"):WaitForChild("Allies"):FireServer(unpack(args))
end

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua'))()

local Window = Rayfield:CreateWindow({
	Name = "Anime Idle Simulator",
	LoadingTitle = "Oxygen Hub",
	LoadingSubtitle = "by Oxygen",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, 
		FileName = "Oxygen"
	},
        Discord = {
        	Enabled = true,
        	Invite = "RVnjYRWNA9", 
        	RememberJoins = true
        },
      KeySystem = false, -- Set this to true to use our key system
      KeySettings = {
      Title = "Oxygen Hub",
      Subtitle = "Key System",
      Note = "Join the discord (discord.gg/RVnjYRWNA9)",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = "FUCKME"
   }

})

local Tab = Window:CreateTab("⚔️ Farm")

local Section = Tab:CreateSection("Farming")


Tab:CreateToggle({
	Name = "Auto Farm Mob",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(state)
    if state then
        getgenv().AutoMob = state
        while AutoMob and task.wait() do
            if not nextlvl then
                for i,v in pairs(game:GetService("Workspace").Game.Hits:GetDescendants()) do
                    if v:IsA("Part") and v.Name == "hitbox" then
                        hrp.CFrame = v.CFrame * CFrame.new(0,-3,3)
                    end
                end
            end
        end
    else
        getgenv().AutoMob = state
        for i = 1, 10 do
            hrp.CFrame = current_plot.Spawns.MobTargetPosition.CFrame
            task.wait()
        end
    end
	end,
})

Tab:CreateToggle({
	Name = "Auto Swing",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(state)
    if state then
        getgenv().AutoSwing = state
        while AutoSwing and task.wait() do
            Swing()
        end
    else
        getgenv().AutoSwing = state
    end
	end,
})

Tab:CreateToggle({
	Name = "Auto Hire",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(state)
    if state then
        if not lp.PlayerGui.Hire.Holder.MainFrame.SkipFrame.Toggle:FindFirstChild("Icon").Visible then
            local args = {[1] = "CanSkipHireScene"}
            game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdateSettings:FireServer(unpack(args))
        end
        
        if lp.PlayerGui.Feedback:FindFirstChild("Verification") then
            lp.PlayerGui.Feedback.Verification:Destroy()
        end
        getgenv().Hire = state
        task.spawn(function()
            while task.wait() do
                if getgenv().Hire then
                    Hire()
                    task.wait(.75)
                end
            end
        end)
    else
        getgenv().Hire = state
    end
	end,
})

Tab:CreateButton({
	Name = "Get Gamepass",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function()
for _, v in next, lp.Gamepasses:GetChildren() do
    if not v.Value then
        v.Value = true
    end
end
	end,
})

Tab:CreateToggle({
	Name = "Auto Use Skills",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(state)
    if state then
        getgenv().AUS = state
        task.spawn(function()
            while AUS do
                for i,v in pairs(game:GetService("ReplicatedStorage")["_GAME"]["_DATA"].Skills.Skills:GetChildren()) do
                    local args = {[1] = "Use",[2] = tostring(v.Name)}
                    game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Skills:FireServer(unpack(args))
                end
                task.wait(3)
            end
        end)
    else
        getgenv().AUS = state
    end
	end,
})


Tab:CreateToggle({
	Name = "Auto Reincarnate",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(state)
    if state then
        getgenv().AutoRE = state
        task.spawn(function()
            while AutoRE do
                game:GetService("ReplicatedStorage"):WaitForChild("_GAME"):WaitForChild("_MODULES"):WaitForChild("Utilities"):WaitForChild("NetworkUtility"):WaitForChild("Events"):WaitForChild("Reincarnate"):FireServer()
                task.wait(5)
            end
        end)
    else
        getgenv().AutoRE = state
    end
	end,
})


Tab:CreateToggle({
	Name = "Auto Next Level",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(state)
    if state then
        getgenv().AutoNL = state
        task.spawn(function()
            while AutoNL do
                NextLevel()
                task.wait(.1)
            end
        end)
    else
        getgenv().AutoNL = state
    end
	end,
})

Tab:CreateToggle({
	Name = "Auto Claim Chest",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(Value)
    autoClick13 = Value
            while autoClick13 do task.wait(1)
local args = {[1] = "CollectReward",[2] = "Daily Chest"}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdateChests:FireServer(unpack(args))
local args = {[1] = "CollectReward",[2] = "Group Chest"}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdateChests:FireServer(unpack(args))
		end
	end,
})

Tab:CreateToggle({
	Name = "Auto Playtime Reward Collect",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function()
local args = {[1] = "ClaimPlaytimeReward",[2] = 1}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
local args = {[1] = "ClaimPlaytimeReward",[2] = 2}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
local args = {[1] = "ClaimPlaytimeReward",[2] = 3}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
local args = {[1] = "ClaimPlaytimeReward",[2] = 4}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
local args = {[1] = "ClaimPlaytimeReward",[2] = 5}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
local args = {[1] = "ClaimPlaytimeReward",[2] = 6}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
local args = {[1] = "ClaimPlaytimeReward",[2] = 7}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
local args = {[1] = "ClaimPlaytimeReward",[2] = 8}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
local args = {[1] = "ClaimPlaytimeReward",[2] = 9}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
local args = {[1] = "ClaimPlaytimeReward",[2] = 10}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
	end,
})


Tab:CreateToggle({
	Name = "Auto Spin",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function()
local args = {
    [1] = "CollectDailySpinRewards"
}
game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Rewards:FireServer(unpack(args))
	end,
})

local Tab1 = Window:CreateTab("Units")
Tab1:CreateSection("Method 1")
local Dropdown = Tab1:CreateDropdown({
   Name = "How Much?",
   Options = {"1","10","100"},
   CurrentOption = "Select",
   Flag = "Select", 
   Callback = function(currentOption)
   choosed_howmuch2 = tonumber(currentOption)
    end,
}) 

Tab1:CreateToggle({
	Name = "Selected Upgrade All",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function(state)
    if state then
        if lp.PlayerGui.Feedback:FindFirstChild("Verification") then
            lp.PlayerGui.Feedback.Verification:Destroy()
        end
        getgenv().AUA = state
        task.spawn(function()
            while AUA do
                UpgradeAll()
                task.wait(.5)
            end
        end)
    else
        getgenv().AUA = state
    end
	end,
})

Tab1:CreateSection("Method 2")
local Dropdown = Tab1:CreateDropdown({
   Name = "Select Units",
   Options = {unpack(Allies)},
   CurrentOption = "Select",
   Flag = "Select", 
   Callback = function(currentOption)
   choosed_ally = IndexUnit(currentOption)
   end,
}) 


local Dropdown = Tab1:CreateDropdown({
   Name = "How Much",
   Options = {"1","10","100"},
   CurrentOption = "Select",
   Flag = "Select", 
   Callback = function(currentOption)
   choosed_howmuch = tonumber(currentOption)
   end,
}) 

Tab1:CreateSlider({
	Name = "Cooldown",
	Range = {0,1, 10},
	Increment = 0.1,
	Suffix = "Seconds",
	CurrentValue = 0.1,
	Flag = "Speed Power Farm Delay",
	Callback = function(s)
	choosed_cd = s
	end,
})

Tab1:CreateToggle({
	Name = "Auto Upgrade Unit",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function(state)
    if state then
        if lp.PlayerGui.Feedback:FindFirstChild("Verification") then
            lp.PlayerGui.Feedback.Verification:Destroy()
        end
        getgenv().AutoUnitUpgrade = state
        task.spawn(function()
            while AutoUnitUpgrade and task.wait() do
                Upgrade(choosed_ally, choosed_howmuch)
                task.wait(choosed_cd)
            end
        end)
    else
        getgenv().AutoUnitUpgrade = state
    end
	end,
})


local Tab2 = Window:CreateTab("Chest")

local Dropdown = Tab2:CreateDropdown({
   Name = "Select Chest",
   Options = {unpack(Chests)},
   CurrentOption = "Select",
   Flag = "Select", 
   Callback = function(currentOption)
   choosed_chest = currentOption
   end,
}) 

Tab2:CreateToggle({
	Name = "Selected Chest Open",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function(state)
	open = state
	while open do wait()
    local args = {[1] = "Purchase",[2] = choosed_chest}
    game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Chests:FireServer(unpack(args))
	end
	end,
})

Tab2:CreateButton({
	Name = "Selected Chest Open Manual",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function()
    local args = {[1] = "Purchase",[2] = choosed_chest}
    game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.Chests:FireServer(unpack(args))
	end,
})

local Tab4 = Window:CreateTab("Upgrades")
Tab4:CreateSection("Select")
Tab4:CreateToggle({
	Name = "Upgrade Yen",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function(value)
    upgrade = value
    while value do wait()
    local args = {[1] = "Upgrade",[2] = "Yen"}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdatePlayerUpgrades:FireServer(unpack(args))
    end
	end,
})

Tab4:CreateToggle({
	Name = "Upgrade Ranged-Attack",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function(value)
    upgrade1 = value
    while upgrade1 do wait()
    local args = {[1] = "Upgrade",[2] = "Sword Radius"}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdatePlayerUpgrades:FireServer(unpack(args))
    end
	end,
})

Tab4:CreateToggle({
	Name = "Upgrade Damage",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function(value)
    upgrade3 = value
    while upgrade3 do wait()
    local args = {[1] = "Upgrade",[2] = "Damage"}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdatePlayerUpgrades:FireServer(unpack(args))
    end
	end,
})

Tab4:CreateToggle({
	Name = "Upgrade Speed",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function(value)
    upgrade4 = value
    while upgrade4 do wait()
    local args = {[1] = "Upgrade",[2] = "Walkspeed"}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdatePlayerUpgrades:FireServer(unpack(args))
    end
	end,
})

Tab4:CreateToggle({
	Name = "Upgrade Faster Swing",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function(value)
    upgrade5 = value
    while upgrade5 do wait()
    local args = {[1] = "Upgrade",[2] = "AttkSpeed"}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdatePlayerUpgrades:FireServer(unpack(args))
    end
	end,
})

Tab4:CreateToggle({
	Name = "Upgrade Luck",
	CurrentValue = false,
	Flag = "Selected Farm",
	Callback = function(value)
    upgrade6 = value
    while upgrade6 do wait()
    local args = {[1] = "Upgrade",[2] = "Luck"}game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdatePlayerUpgrades:FireServer(unpack(args))
    end
	end,
})


local Tab3 = Window:CreateTab("📖 Others")

Tab3:CreateSection("Discord")

local Button = Tab3:CreateButton({
   Name = "Copy Discord Invite",
   Callback = function()
   setclipboard("discord.gg/RVnjYRWNA9")
   end,
})

Tab3:CreateSection("Others")

Tab3:CreateToggle({
	Name = "Inf Jump",
	CurrentValue = false,
	Flag = "Toggle50", 
	Callback = function(Value)
    antiAfk = Value
            while antiAfk do task.wait(0.1)
local Player = game:GetService'Players'.LocalPlayer;
local UIS = game:GetService'UserInputService';
 
_G.JumpHeight = 50;
 
function Action(Object, Function) if Object ~= nil then Function(Object); end end
 
UIS.InputBegan:connect(function(UserInput)
    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
        Action(Player.Character.Humanoid, function(self)
            if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                Action(self.Parent.HumanoidRootPart, function(self)
                    self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                end)
            end
        end)
    end
end)
		end
	end,
})

local Button = Tab3:CreateButton({
   Name = "Twitter Verify",
   Callback = function()
local args = {
    [1] = "VerifyTwitter",
    [2] = "@yarak"
}
game:GetService("ReplicatedStorage")._GAME._MODULES.Utilities.NetworkUtility.Events.UpdateCodes:FireServer(unpack(args))
   end,
})

Tab3:CreateButton({
	Name = "Reedem Codes",
	CurrentValue = false,
	Flag = "Toggle50", 
	Callback = function()
    local Codes = {"JOJO", "RELEASE", "ONEPUNCH", "UPDATE3", "NODELAY", "HUNTER", "VOLTRA", "S3CR3T"}
    
    for i, code in Codes do
        local args = {[1] = "EnterCode",[2] = code}
        game:GetService("ReplicatedStorage"):WaitForChild("_GAME"):WaitForChild("_MODULES"):WaitForChild("Utilities"):WaitForChild("NetworkUtility"):WaitForChild("Events"):WaitForChild("UpdateCodes"):FireServer(unpack(args))
        task.wait(.1)
    end
	end,
})

Tab3:CreateSection("Movement")

Tab3:CreateToggle({
	Name = "Anti Afk",
	CurrentValue = true,
	Flag = "Toggle50", 
	Callback = function(Value)
    antiAfk = Value
            while antiAfk do task.wait(0.1)
local VirtualUser=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end)
		end
	end,
})


local Button = Tab3:CreateButton({
   Name = "Rejoin",
   Callback = function()
   loadstring(game:HttpGet("https://pastebinp.com/raw/mM7JBG5h"))()
   end,
})

local Button = Tab3:CreateButton({
   Name = "Reset",
   Callback = function()
   loadstring(game:HttpGet("https://pastebinp.com/raw/EEY6SATj"))()
   end,
})

Rayfield:LoadConfiguration()
